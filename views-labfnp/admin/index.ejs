<!DOCTYPE html>
<html lang="en-us">
<head>
<meta charset="utf-8">
<title>CargoCMS - Cloud Web Management</title>
<meta name="description" content="CargoCMS Web Management">
<meta name="author" content="Trunk Studio">

<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

<% include partials/styles.ejs %>

<style type="text/css">
#admin-title {
	font-size: 15px;
	margin: 15px 0;
	padding: 0;
	color: #ffffff;
	letter-spacing: .5px;
}
#admin-copyright {
	color: #ffffff;
}

.loading-wrapper {
  position: fixed;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.67);
  top: 0;
  left: 0;
  z-index: -1;
  /*transition: 0.2s all;*/
  opacity: 0;
  /*transform: rotateX(-31deg) scale(0.3);*/
}
.loading-wrapper.active {
  opacity: 1;
  z-index: 10000;
  /*transform: rotateX(0deg) scale(1);*/
}
.spinner {
  margin: -15px 0 0 -75px;
  width: 150px;
  top: 50%;
  left: 50%;
  text-align: center;
  position: absolute;
  text-align: center;
}

.spinner > div {
  width: 30px;
  height: 30px;
  background-color: #9da3a8;

  border-radius: 100%;
  display: inline-block;
  -webkit-animation: bouncedelay 1.4s infinite ease-in-out;
  animation: bouncedelay 1.4s infinite ease-in-out;
  /* Prevent first frame from flickering when animation starts */
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.spinner .bounce1 {
  -webkit-animation-delay: -0.32s;
  animation-delay: -0.32s;
}

.spinner .bounce2 {
  -webkit-animation-delay: -0.16s;
  animation-delay: -0.16s;
}

@-webkit-keyframes bouncedelay {
  0%, 80%, 100% { -webkit-transform: scale(0.0) }
  40% { -webkit-transform: scale(1.0) }
}

@keyframes bouncedelay {
  0%, 80%, 100% {
    transform: scale(0.0);
    -webkit-transform: scale(0.0);
  } 40% {
    transform: scale(1.0);
    -webkit-transform: scale(1.0);
  }
}

</style>
</head>
<body class="smart-style-2">

	<% include partials/header %>

	<!-- #MAIN PANEL -->
	<div id="main" role="main">

    <div class="loading-wrapper">
      <div class="spinner">
        <div class="bounce1"></div>
        <div class="bounce2"></div>
        <div class="bounce3"></div>
      </div>
    </div>

		<!-- RIBBON -->
		<div id="ribbon">
			<!-- breadcrumb -->
			<ol class="breadcrumb">
				<!-- This is auto generated -->
			</ol>
			<!-- end breadcrumb -->
		</div>
		<!-- END RIBBON -->

		<!-- #MAIN CONTENT -->
		<div id="message" v-show="desc != ''">
			<span class="{{type}}">{{desc}}</span>
		</div>
		<div id="content"></div>
		<!-- END #MAIN CONTENT -->

	</div>
	<!-- END #MAIN PANEL -->



  <% include partials/footer %>
	<% include partials/scripts %>

	<script type="text/javascript" src="/admin/config.js"></script>
	<script type="text/javascript">

	// $(function() {
	//   $('#admin-title').html(__ADMIN_CONFIG__.title);
	//   $('#admin-copyright').html(__ADMIN_CONFIG__.copyright);
	// });
  // $('#main').on('preInit.dt', function(e, settings){
  //   $(".loading-wrapper").addClass('active');
  // });

	var messageModel = { type: "", desc: "" };

	var messageApp = new Vue({
		el: "#message",
	  data: messageModel,
	  methods: {
	    show: function(params) {
				// messageModel.type = type;
				// messageModel.desc = desc;
				var iconSmall;
				var color;
				switch (params.type) {
					case 'success':
						iconSmall = "fa-fw fa fa-check";
						color = "#356635";
						break;
					case 'error':
						iconSmall = "fa-fw fa fa-times";
						color = "#953b39";
						break;
					case 'warning':
						iconSmall = "fa-fw fa fa-warning";
						color = "#dfb56c";
						break;
					default:
						iconSmall = "fa-fw fa fa-info";
						color = "#305d8c";
						break;
				}
				$.smallBox({
          title: params.desc,
          content: "",
          color: color,
          iconSmall: iconSmall,
          sound: false,
          timeout: 3000
        });
	    },
			// confirm: ({title, content, btnArray}, cb) => {
			confirm: function(params, cb) {
				var buttons = '';
				params.btnArray.forEach(function(btn) {
					buttons += '[' + btn + ']';
				});
				$.SmartMessageBox({
					title: params.title,
					content: params.content,
					buttons: buttons,
				}, function(ButtonPressed) {
					cb(ButtonPressed);
				});
			}
		}
	});
	</script>
</body>

</html>
